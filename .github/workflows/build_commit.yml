name: Build Commit

on:
  push:
    branches:
      - fork-*

permissions:
  packages: write

env:
  IMAGE_NAME_PREFIX: ghcr.io/${{ github.repository_owner }}/kubeflow-pipelines
  BUILD_CACHE_PREFIX: ghcr.io/${{ github.repository_owner }}/ci/kubeflow-pipelines
  BUILD_PLATFORMS: |-
    linux/amd64

jobs:

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/api-server
  ## ================================================================
  build__api_server:
    name: Build - API Server
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/api-server

      metadata_title: "Kubeflow Pipelines - API Server"
      metadata_description: "The API server for Kubeflow Pipelines."

      tag_with_sha: true

      build_file: ./backend/Dockerfile
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/api-server:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/cache-server
  ## ================================================================
  build__cache_server:
    name: Build - Cache Server
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/cache-server

      metadata_title: "Kubeflow Pipelines - Cache Server"
      metadata_description: "The cache server for Kubeflow Pipelines."

      tag_with_sha: true

      build_file: ./backend/Dockerfile.cacheserver
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/cache-server:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/frontend
  ## ================================================================
  build__frontend:
    name: Build - Frontend
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/frontend

      metadata_title: "Kubeflow Pipelines - Frontend"
      metadata_description: "The frontend for Kubeflow Pipelines."

      tag_with_sha: true

      build_file: ./frontend/Dockerfile
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/frontend:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/metadata-envoy
  ## ================================================================
  build__metadata_envoy:
    name: Build - Metadata Envoy
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/metadata-envoy

      metadata_title: "Kubeflow Pipelines - Metadata Envoy"
      metadata_description: "The upstream Envoy Proxy, with extra license information."

      tag_with_sha: true

      build_file: ./third_party/metadata_envoy/Dockerfile
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/metadata-envoy:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/metadata-writer
  ## ================================================================
  build__metadata_writer:
    name: Build - Metadata Writer
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/metadata-writer

      metadata_title: "Kubeflow Pipelines - Metadata Writer"
      metadata_description: "The metadata writer for Kubeflow Pipelines."

      tag_with_sha: true

      build_file: ./backend/metadata_writer/Dockerfile
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/metadata-writer:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/persistenceagent
  ## ================================================================
  build__persistence_agent:
    name: Build - Persistence Agent
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/persistenceagent

      metadata_title: "Kubeflow Pipelines - Persistence Agent"
      metadata_description: "The persistence agent for Kubeflow Pipelines."

      tag_with_sha: true

      build_file: ./backend/Dockerfile.persistenceagent
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/persistenceagent:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/scheduledworkflow
  ## ================================================================
  build__scheduled_workflow:
    name: Build - Scheduled Workflow Controller
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/scheduledworkflow

      metadata_title: "Kubeflow Pipelines - Scheduled Workflow Controller"
      metadata_description: "The scheduled workflow controller for Kubeflow Pipelines."

      tag_with_sha: true

      build_file: ./backend/Dockerfile.scheduledworkflow
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/scheduledworkflow:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/viewer-crd-controller
  ## ================================================================
  build__viewer_crd_controller:
    name: Build - Viewer CRD Controller
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/viewer-crd-controller

      metadata_title: "Kubeflow Pipelines - Viewer CRD Controller"
      metadata_description: "The viewer CRD controller for Kubeflow Pipelines."

      tag_with_sha: true

      build_file: ./backend/Dockerfile.viewercontroller
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/viewer-crd-controller:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/visualization-server
  ## ================================================================
  build__visualization_server:
    name: Build - Visualization Server
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/visualization-server

      metadata_title: "Kubeflow Pipelines - Visualization Server"
      metadata_description: "The visualization server for Kubeflow Pipelines."

      tag_with_sha: true

      build_file: ./backend/Dockerfile.visualization
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/visualization-server:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/kfp-launcher
  ## ================================================================
  build__pipeline_launcher:
    name: Build - Pipeline Launcher
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/kfp-launcher

      metadata_title: "Kubeflow Pipelines - Pipeline Launcher"
      metadata_description: "The pipeline launcher for Kubeflow Pipelines, used in workflow runs."

      tag_with_sha: true

      build_file: ./backend/Dockerfile.launcher
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/kfp-launcher:build-cache
      login_to_ghcr: true

  ## ================================================================
  ## UPSTREAM IMAGE: gcr.io/ml-pipeline/kfp-driver
  ## ================================================================
  build__pipeline_driver:
    name: Build - Pipeline Driver
    uses: ./.github/workflows/build_image_TEMPLATE.yml
    secrets: inherit
    with:
      image_names: ${{ env.IMAGE_NAME_PREFIX }}/kfp-driver

      metadata_title: "Kubeflow Pipelines - Pipeline Driver"
      metadata_description: "The pipeline driver for Kubeflow Pipelines, used in workflow runs."

      tag_with_sha: true

      build_file: ./backend/Dockerfile.driver
      build_context: .
      build_platforms: ${{ env.BUILD_PLATFORMS }}
      build_registry_cache: ${{ env.BUILD_CACHE_PREFIX }}/kfp-driver:build-cache
      login_to_ghcr: true